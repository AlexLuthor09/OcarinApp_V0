// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OcarinAPI.Data;

#nullable disable

namespace OcarinAPI.Migrations
{
    [DbContext(typeof(OcarinaDBContext))]
    [Migration("20230808053942_OcarinaDBMigration")]
    partial class OcarinaDBMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OcarinAPI.Models.Animateurs", b =>
                {
                    b.Property<int>("ID_animateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_animateur"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Allergie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnneeFormation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsableTrancheAge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_animateur");

                    b.ToTable("Animateurs");
                });

            modelBuilder.Entity("OcarinAPI.Models.Animateurs_Plaines", b =>
                {
                    b.Property<int>("ID_animateur")
                        .HasColumnType("int");

                    b.Property<int>("ID_plaine")
                        .HasColumnType("int");

                    b.Property<bool?>("FicheSante")
                        .HasColumnType("bit");

                    b.Property<string>("ResponsableTrancheAge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_animateur", "ID_plaine");

                    b.HasIndex("ID_plaine");

                    b.ToTable("Animateurs_Plaines");
                });

            modelBuilder.Entity("OcarinAPI.Models.Enfants", b =>
                {
                    b.Property<int>("ID_enfant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_enfant"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Allergie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FicheSante")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatutMC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrancheAge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_enfant");

                    b.ToTable("Enfants");
                });

            modelBuilder.Entity("OcarinAPI.Models.Enfants_Plaines", b =>
                {
                    b.Property<int>("ID_enfant")
                        .HasColumnType("int");

                    b.Property<int>("ID_plaine")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("StatutPaiement")
                        .HasColumnType("bit");

                    b.Property<bool?>("jeudi")
                        .HasColumnType("bit");

                    b.Property<bool?>("lundi")
                        .HasColumnType("bit");

                    b.Property<bool?>("mardi")
                        .HasColumnType("bit");

                    b.Property<bool?>("mercredi")
                        .HasColumnType("bit");

                    b.Property<int?>("nbrJourPresent")
                        .HasColumnType("int");

                    b.Property<bool?>("vendredi")
                        .HasColumnType("bit");

                    b.HasKey("ID_enfant", "ID_plaine");

                    b.HasIndex("ID_plaine");

                    b.ToTable("Enfants_Plaines");
                });

            modelBuilder.Entity("OcarinAPI.Models.Plaines", b =>
                {
                    b.Property<int>("ID_plaine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_plaine"));

                    b.Property<int?>("CapaciteMax")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomPlaine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableauTaches")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_plaine");

                    b.ToTable("Plaines");
                });

            modelBuilder.Entity("OcarinAPI.Models.Taches", b =>
                {
                    b.Property<int>("ID_tache")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_tache"));

                    b.Property<string>("DescriptionTache")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NbrAnimateurs")
                        .HasColumnType("int");

                    b.Property<string>("TitreTache")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_tache");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("OcarinAPI.Models.Taches_Plaines", b =>
                {
                    b.Property<int>("ID_tache")
                        .HasColumnType("int");

                    b.Property<int>("ID_plaine")
                        .HasColumnType("int");

                    b.Property<int?>("PlainesID_plaine")
                        .HasColumnType("int");

                    b.Property<int?>("TachesID_tache")
                        .HasColumnType("int");

                    b.HasKey("ID_tache", "ID_plaine");

                    b.HasIndex("PlainesID_plaine");

                    b.HasIndex("TachesID_tache");

                    b.ToTable("Taches_Plaines");
                });

            modelBuilder.Entity("OcarinAPI.Models.Animateurs_Plaines", b =>
                {
                    b.HasOne("OcarinAPI.Models.Animateurs", "Animateurs")
                        .WithMany()
                        .HasForeignKey("ID_animateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OcarinAPI.Models.Plaines", "Plaines")
                        .WithMany()
                        .HasForeignKey("ID_plaine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animateurs");

                    b.Navigation("Plaines");
                });

            modelBuilder.Entity("OcarinAPI.Models.Enfants_Plaines", b =>
                {
                    b.HasOne("OcarinAPI.Models.Enfants", "Enfants")
                        .WithMany()
                        .HasForeignKey("ID_enfant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OcarinAPI.Models.Plaines", "Plaines")
                        .WithMany()
                        .HasForeignKey("ID_plaine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enfants");

                    b.Navigation("Plaines");
                });

            modelBuilder.Entity("OcarinAPI.Models.Taches_Plaines", b =>
                {
                    b.HasOne("OcarinAPI.Models.Plaines", "Plaines")
                        .WithMany()
                        .HasForeignKey("PlainesID_plaine");

                    b.HasOne("OcarinAPI.Models.Taches", "Taches")
                        .WithMany()
                        .HasForeignKey("TachesID_tache");

                    b.Navigation("Plaines");

                    b.Navigation("Taches");
                });
#pragma warning restore 612, 618
        }
    }
}
